{"version":3,"sources":["App.tsx","index.tsx","theme.ts"],"names":["Wrapper","styled","motion","div","Com","Box","Box1","Box2","Box3s","Box3","Box4","Circle","circleVariants","start","opacity","y","end","boxVariants","scale","transition","type","duration","bounce","staggerChildren","hoverVariants","hover","rotateZ","click","borderRadius","myVars","App","biggerBoxRef","useRef","x","useMotionValue","useTransform","gradient","scrollYProgress","useViewportScroll","style","background","textAlign","variants","initial","animate","drag","dragConstraints","top","bottom","left","right","whileHover","whileTap","ref","dragSnapToOrigin","dragElastic","onClick","set","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"oOAQMA,EAAUC,YAAOC,IAAOC,IAAdF,CAAH,mIAQPG,EAAMH,IAAOE,IAAV,mHAOHE,EAAMJ,YAAOC,IAAOC,IAAdF,CAAH,kNASHK,EAAOL,YAAOC,IAAOC,IAAdF,CAAH,mSAYJM,EAAON,YAAOC,IAAOC,IAAdF,CAAH,kNASJO,EAAQP,YAAOC,IAAOC,IAAdF,CAAH,8MASLQ,EAAOR,YAAOC,IAAOC,IAAdF,CAAH,gUAaJS,EAAOT,YAAOC,IAAOC,IAAdF,CAAH,oNASJU,EAASV,YAAOC,IAAOC,IAAdF,CAAH,sNASNW,EAAiB,CACrBC,MAAO,CACLC,QAAS,EACTC,EAAG,IAELC,IAAK,CACHF,QAAS,EACTC,EAAG,IASDE,EAAc,CAClBJ,MAAO,CACLC,QAAS,EACTI,MAAO,IAETF,IAAK,CACHE,MAAO,EACPJ,QAAS,EACTK,WAAY,CACVC,KAAM,SACNC,SAAU,GACVC,OAAQ,GACRC,gBAAiB,OAKjBC,EAAgB,CACpBC,MAAO,CAAEC,QAAS,IAClBC,MAAO,CAAEC,aAAc,UAGnBC,EAAS,CACbhB,MAAO,CACLK,MAAO,GAETF,IAAK,CACHE,MAAO,EACPQ,QAAS,IACTP,WAAY,CACVE,SAAU,KA6EDS,I,EAAAA,EAxEf,WACE,IAAMC,EAAeC,iBAAuB,MAGtCC,EAAIC,YAAe,GAEnBR,EAAUS,YAAaF,EAAG,EAAE,IAAK,KAAM,EAAE,IAAK,MAE9CG,EAAWD,YACfF,EACA,EAAE,IAAK,EAAG,KACV,CAAC,oCAEC,6DACA,gEAIII,EAAoBC,cAApBD,gBACFnB,EAAQiB,YAAaE,EAAiB,CAAC,EAAG,GAAI,CAAC,EAAG,IAExD,OACE,eAACrC,EAAD,CAASuC,MAAO,CAAEC,WAAYJ,GAA9B,UACE,eAAChC,EAAD,WACE,sBAAMmC,MAAO,CAAEE,UAAW,UAA1B,mBACA,cAACpC,EAAD,CAAKqC,SAAUb,EAAQc,QAAQ,QAAQC,QAAQ,WAEjD,eAACxC,EAAD,WACE,sBAAMmC,MAAO,CAAEE,UAAW,UAA1B,mBACA,eAACnC,EAAD,CAAMoC,SAAUzB,EAAa0B,QAAQ,QAAQC,QAAQ,MAArD,UACE,cAACjC,EAAD,CAAQ+B,SAAU9B,IAClB,cAACD,EAAD,CAAQ+B,SAAU9B,IAClB,cAACD,EAAD,CAAQ+B,SAAU9B,IAClB,cAACD,EAAD,CAAQ+B,SAAU9B,UAGtB,eAACR,EAAD,WACE,sBAAMmC,MAAO,CAAEE,UAAW,UAA1B,wBAKA,cAAClC,EAAD,CACEsC,MAAI,EACJC,gBAAiB,CAAEC,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GACtDR,SAAUlB,EACV2B,WAAW,QACXC,SAAS,aAGb,eAAChD,EAAD,WACE,sBAAMmC,MAAO,CAAEE,UAAW,UAA1B,kBACA,cAAChC,EAAD,CAAM4C,IAAKtB,EAAX,SACE,cAACvB,EAAD,CACEqC,MAAI,EACJS,kBAAgB,EAChBC,YAAa,EACbT,gBAAiBf,EACjBW,SAAUlB,EACV2B,WAAW,QACXC,SAAS,eAIf,eAAChD,EAAD,WACE,wBAAQoD,QAAS,kBAAMvB,EAAEwB,IAAI,MAA7B,sBACA,cAAC/C,EAAD,CAAM6B,MAAO,CAAEN,IAAGP,UAASR,SAAS2B,KAAK,IAAIS,kBAAgB,WC3M/DI,EAAcC,YAAH,ogDAkEjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAeC,MC1EkB,GD0EjC,UACE,cAACL,EAAD,IACA,cAAC,EAAD,WAINM,SAASC,eAAe,W","file":"static/js/main.24c5537a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  motion,\n  useMotionValue,\n  useTransform,\n  useViewportScroll,\n} from \"framer-motion\";\nconst Wrapper = styled(motion.div)`\n  height: 200vh;\n  width: 100vw;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n`;\n\nconst Com = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 220px;\n  margin-bottom: 40px;\n`;\n\nconst Box = styled(motion.div)`\n  width: 200px;\n  height: 200px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n  margin: 10px;\n`;\n\nconst Box1 = styled(motion.div)`\n  width: 200px;\n  height: 200px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n  margin: 10px;\n`;\n\nconst Box2 = styled(motion.div)`\n  width: 200px;\n  height: 200px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n  margin: 10px;\n`;\n\nconst Box3s = styled(motion.div)`\n  width: 90px;\n  height: 90px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n  padding: 0;\n`;\n\nconst Box3 = styled(motion.div)`\n  width: 200px;\n  height: 200px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n\nconst Box4 = styled(motion.div)`\n  width: 200px;\n  height: 200px;\n  background-color: #fffa65;\n  border-radius: 10px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n  margin: 10px;\n`;\n\nconst Circle = styled(motion.div)`\n  background-color: white;\n  place-self: center;\n  height: 70px;\n  width: 70px;\n  border-radius: 35px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n`;\n\nconst circleVariants = {\n  start: {\n    opacity: 0,\n    y: 10,\n  },\n  end: {\n    opacity: 1,\n    y: 0,\n  },\n};\n\n// const myVars = {\n//   start: { scale: 0 },\n//   end: { scale: 1, rotateZ: 360, transition: { type: \"spring\", delay: 1 } },\n// };\n\nconst boxVariants = {\n  start: {\n    opacity: 0,\n    scale: 0.5,\n  },\n  end: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      type: \"spring\",\n      duration: 0.5,\n      bounce: 0.5,\n      staggerChildren: 0.15,\n    },\n  },\n};\n\nconst hoverVariants = {\n  hover: { rotateZ: 90 },\n  click: { borderRadius: \"100px\" },\n};\n\nconst myVars = {\n  start: {\n    scale: 0,\n  },\n  end: {\n    scale: 1,\n    rotateZ: 360,\n    transition: {\n      duration: 3,\n    },\n  },\n};\n\nfunction App() {\n  const biggerBoxRef = useRef<HTMLDivElement>(null);\n\n  //Motion Value\n  const x = useMotionValue(0);\n  //useTransform (값 , [검토하길 원하는 입력값] , [얻길 원하는 출력값])\n  const rotateZ = useTransform(x, [-800, 800], [-360, 360]);\n\n  const gradient = useTransform(\n    x,\n    [-800, 0, 800],\n    [\n      `linear-gradient(135deg,#e09,#d0e)`,\n      \"linear-gradient(135deg, rgb(0, 210, 238), rgb(0, 83, 238))\",\n      \"linear-gradient(135deg, rgb(0, 238, 155), rgb(238, 178, 0))\",\n    ]\n  );\n\n  const { scrollYProgress } = useViewportScroll();\n  const scale = useTransform(scrollYProgress, [0, 1], [1, 2]);\n\n  return (\n    <Wrapper style={{ background: gradient }}>\n      <Com>\n        <span style={{ textAlign: \"center\" }}>Tset1</span>\n        <Box variants={myVars} initial=\"start\" animate=\"end\" />\n      </Com>\n      <Com>\n        <span style={{ textAlign: \"center\" }}>Tset2</span>\n        <Box1 variants={boxVariants} initial=\"start\" animate=\"end\">\n          <Circle variants={circleVariants} />\n          <Circle variants={circleVariants} />\n          <Circle variants={circleVariants} />\n          <Circle variants={circleVariants} />\n        </Box1>\n      </Com>\n      <Com>\n        <span style={{ textAlign: \"center\" }}>HoverEvent</span>\n        {/* <Box2\n          whileHover={{ scale: 1.5, rotateZ: 90 }}\n          whileTap={{ scale: 1, borderRadius: \"100px\" }}\n        ></Box2> */}\n        <Box2\n          drag\n          dragConstraints={{ top: 0, bottom: 0, left: 0, right: 0 }}\n          variants={hoverVariants}\n          whileHover=\"hover\"\n          whileTap=\"click\"\n        ></Box2>\n      </Com>\n      <Com>\n        <span style={{ textAlign: \"center\" }}>Drag</span>\n        <Box3 ref={biggerBoxRef}>\n          <Box3s\n            drag\n            dragSnapToOrigin\n            dragElastic={1}\n            dragConstraints={biggerBoxRef}\n            variants={hoverVariants}\n            whileHover=\"hover\"\n            whileTap=\"click\"\n          ></Box3s>\n        </Box3>\n      </Com>\n      <Com>\n        <button onClick={() => x.set(200)}>Click me</button>\n        <Box4 style={{ x, rotateZ, scale }} drag=\"x\" dragSnapToOrigin></Box4>\n      </Com>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n \n  color:black;\n  line-height: 1.2;\n  background:linear-gradient(135deg,#e09,#d0e);\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {};\r\n"],"sourceRoot":""}